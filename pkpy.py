# -*- coding: utf-8 -*-

import requests
import time
import re
import os
import sys
from prompt_toolkit import prompt
from prompt_toolkit.completion import WordCompleter
from selenium import webdriver
from bs4 import BeautifulSoup
from datetime import datetime

WebDriverPath = "chromedriver.exe"

makeHeadles = webdriver.ChromeOptions()
makeHeadles.add_argument('headless')
makeHeadles.add_experimental_option('excludeSwitches', ['enable-logging'])
SeleniumDriver = webdriver.Chrome(options=makeHeadles)

czas = time.localtime()
current_time = time.strftime("%H:%M:%S", czas)
aktualna_data = datetime.today().strftime('%d/%m/%Y')
data_payload = datetime.today().strftime('%d%m%Y')
current_time_payload = time.strftime("%H%M", czas)
czas_payload = data_payload + current_time_payload

zegarek_data = datetime.today().strftime('%d/%m/%Y')
zegarek_czas = time.strftime("%H:%M", czas)

print("\n")
print(f"   PKPython 1.0                                   Czas ü¢í  {zegarek_data} [{zegarek_czas}]  ")
print("\n")
print("\033[0;37;40m     ____  ____  ____  ____   ____ ____ ____ ____   ____  ____  ____  ___   \033[0;37;40m")
print("\033[0;37;40m    ||  ||||  ||||  ||||  || ||P |||K |||P |||y || ||  ||||  ||||  ||||  \   \033[0;37;40m")
print("\033[0;37;40m    ||__||||__||||__||||__||-||__|||__|||__|||__||-||__||||__||||__||||__ C   \033[0;37;40m")
print("\033[1;31;40m    |/__\||/__\||/__\||/__\| |/__\|/__\|/__\|/__\| |/__\||/__\||/__\||/__\|   \033[0;37;40m")
print("\033[1;31;40m                                                                             \033[0;37;40m")
print("\n")
print("   [PUBLIC BETA]                                    Miko≈Çaj Po≈Çonowicz ¬©2022")
print("\n")

print("≈Åadowanie Stacji... ‚Üª")
print("\n")
stations_list = WordCompleter(['Andrych√≥w', 'Anieliny', 'Babimost', 'Babor√≥wko', 'Balinka', 'Bardo Przy≈Çƒôk', 'Bardo ≈ölƒÖskie', 'Bar≈Çogi', 'Be≈Çch√≥w', 'Bƒôdzin Miasto', 'Biadoliny', 'Bia≈Ça Podlaska', 'Bia≈Çogard', 'Bia≈Ço≈õliwie', 'Bia≈Çy B√≥r', 'Bia≈Çy Dunajec', 'Bia≈Çystok', 'Bia≈Çystok Bacieczki', 'Bielsk Podlaski', 'Bielsko-Bia≈Ça G≈Ç√≥wna', 'Bierut√≥w', 'Bierzwnik', 'Bi≈Ñcze', 'Biskupice Wielkopolskie', 'Biskupiec Pomorski', 'B≈ÇƒÖdzim', 'B≈Çonie', 'Bochnia', 'Bogusz√≥w Gorce Zach√≥d', 'Bojanowo', 'Boles≈Çawiec', 'Boleszkowice', 'Boron√≥w', 'Borowa Ole≈õnicka', 'Braniewo', 'Bron√≥w', 'Brusy', 'Brwin√≥w', 'Brzeg', 'Brzeg Dolny', 'Brzesko Okocim', 'Budach√≥w', 'Budzy≈Ñ', 'Bukowo', 'Bydgoszcz G≈Ç√≥wna', 'Bydgoszcz ≈Åƒôgnowo', 'Bystrzyca K≈Çodzka Przedmie≈õcie', 'Bytom', 'Bytom Odrza≈Ñski', 'Cekcyn', 'Celestyn√≥w', 'Che≈Çm', 'Che≈Çm Miasto', 'Chocicza', 'Chociwel', 'Chodzie≈º', 'Chojna', 'Chojn√≥w', 'Chorz√≥w Batory', 'ChrzƒÖstowice', 'Chyn√≥w', 'Ciechan√≥w', 'Czaplinek', 'Czarna Bia≈Çostocka', 'Czarna Tarnowska', 'Czarna Woda', 'Czechowice Dziedzice', 'Czempi≈Ñ', 'Czeremcha', 'Czerwie≈Ñsk', 'Czerwonka', 'Czƒôstochowa', 'Czƒôstochowa Stradom', 'Czy≈ºew', 'Damnica', 'DƒÖbrowa Bia≈Çostocka', 'Dƒôba Opoczy≈Ñska', 'Dƒôbe Wielkie', 'Dƒôbica', 'Dƒôblin', 'Dobieszyn', 'Dobroszyce', 'Dolice', 'Domaszk√≥w', 'Drawski M≈Çyn', 'Duszniki-Zdr√≥j', 'Dzia≈Çdowo', 'Dziemb√≥wko', 'Dziemiany Kaszubskie', 'Dziewule', 'ElblƒÖg', 'E≈Çk', 'Ga≈Çk√≥wek', 'Garbatka Letnisko', 'GƒÖdki', 'GƒÖdk√≥w Wielki', 'Gda≈Ñsk G≈Ç√≥wny', 'Gda≈Ñsk Oliwa', 'Gda≈Ñsk Osowa', 'Gda≈Ñsk Wrzeszcz', 'Gdynia Chylonia', 'Gdynia G≈Ç√≥wna Osobowa', 'Gi≈ºycko', 'Gliwice', 'G≈Çog√≥w', 'G≈Çog√≥wek', 'G≈Çowno', 'G≈Çucho≈Çazy', 'G≈Çuszyca', 'Gniewkowo', 'Gniezno', 'Go≈Çubie Kaszubskie', 'Gorzan√≥w', 'Gorzkowice', 'Gorz√≥w Wielkopolski', 'Grab√≥w nad PilicƒÖ', 'Granowiec', 'Grƒôbosz√≥w', 'Grodzisk Mazowiecki', 'GrudziƒÖdz', 'Grupa', 'Gryfice', 'Gryfino', 'GrzmiƒÖca', 'Hel', 'I≈Çawa G≈Ç√≥wna', 'I≈Çowiec', 'Imbramowice', 'Inowroc≈Çaw', 'Iwin', 'Jab≈Çonowo Pomorskie', 'Jab≈Ço≈Ñ Ko≈õcielna', 'Jaktor√≥w', 'Janikowo', 'Janin√≥w', 'Jarocin', 'Jaros≈Çaw', 'Jasienica Mazowiecka', 'Jasie≈Ñ Brzeski', 'Jastrowie', 'Jastrzƒôbna', 'Jawor', 'Jaworzyna ≈ölƒÖska', 'Jelenia G√≥ra', 'Je≈ºewo', 'Jƒôdrzej√≥w', 'J√≥zef√≥w', 'Kaliska', 'Kaliska Kujawskie', 'Kalisz', 'Kalisz Kaszubski', 'Kamieniec ZƒÖbkowicki', 'Kamienna Nowa', 'Kamie≈Ñ Pomorski', 'Katowice', 'Katowice', 'Katowice Ligota', 'KƒÖty Wroc≈Çawskie', 'Kƒôdzierzyn Ko≈∫le', 'Kƒôpno', 'Kielce', 'Kie≈Çpino Kartuskie', 'Kliniska', 'Kluczbork', 'K≈Çodawa', 'K≈Çodzko G≈Ç√≥wne', 'Knyszyn', 'Kobi√≥r', 'Kolumna', 'Koluszki', 'Ko≈Ço', 'Ko≈Çobrzeg', 'Ko≈Çodziejewo', 'Koniecpol', 'Konin', 'Konopki', 'Korsze', 'Korze≈Ñsko', 'Kost√≥w', 'Kostrzyn nad OdrƒÖ', 'Kostrzyn Wielkopolski', 'Koszalin', 'Koszƒôcin', 'Ko≈õcian', 'Kotlin', 'Kotomierz', 'Kowalewo Pomorskie', 'Kowal√≥w', 'Ko≈∫min Wielkopolski', 'Krak√≥w G≈Ç√≥wny', 'Krak√≥w P≈Çasz√≥w', 'Krak√≥w Swoszowice', 'Krasiej√≥w', 'Krotoszyn', 'Kruszyna', 'Krynica-Zdr√≥j', 'Krzepice', 'Krzeszowice', 'Krzywizna', 'Krzy≈º Wielkopolski', 'KsiƒÖ≈ºki', 'Ksiƒôginice', 'Kudowa Zdr√≥j', 'Kundzin', 'Kutno', 'Ku≈∫nica Bia≈Çostocka', 'Laskowice Pomorskie', 'Lednog√≥ra', 'Legnica', 'Le≈Ñcze', 'Leszno', 'Le≈ºajsk', 'Lƒôbork', 'Lipka Kraje≈Ñska', 'Lipno Nowe', 'Luba≈Ñ ≈ölƒÖski', 'Lublin G≈Ç√≥wny', 'Lubliniec', 'Lubo≈Ñ ko≈Ço Poznania', 'Lutol Suchy', 'Luzino', '≈Åa≈Ñcut', '≈Åazy', '≈Åƒôczyca', '≈Åobez', '≈Åowcz√≥wek Ple≈õna', '≈Åowicz G≈Ç√≥wny', '≈Å√≥d≈∫ Chojny', '≈Å√≥d≈∫ Kaliska', '≈Å√≥d≈∫ Widzew', '≈Å√≥d≈∫ ≈ªabieniec', '≈Å√≥d≈∫ Radogoszcz Zach√≥d', '≈Å√≥d≈∫ Fabryczna', '≈Å√≥d≈∫ Retkinia', '≈Å√≥d≈∫ Lublinek', '≈Å√≥d≈∫ Koziny', '≈Å√≥d≈∫ Niciarniana', '≈Å√≥d≈∫ Olech√≥w Wiadukt', '≈Å√≥d≈∫ Olech√≥w Zach√≥d', '≈Å√≥d≈∫ Olech√≥w Wsch√≥d', '≈Å√≥d≈∫ Pabianicka', '≈Å√≥d≈∫ Stoki', '≈Å√≥d≈∫ Warszawska', '≈Å√≥d≈∫ DƒÖbrowa', '≈Å√≥d≈∫ Andrzej√≥w', '≈Åugi G√≥rzyckie', '≈Åuk√≥w', 'Machnacz', 'Maksymilianowo', 'Malbork', 'Malczyce', 'Ma≈Çkinia', 'Ma≈Çowice Wo≈Çowskie', 'Mia≈Çy', 'Miasteczko Kraje≈Ñskie', 'Michalin', 'Miech√≥w', 'Mieszkowice', 'Mieszk√≥w', 'Miƒôdzybor√≥w', 'Miƒôdzylesie', 'Miƒôdzyrzec Podlaski', 'Miƒôdzyzdroje', 'Milan√≥wek', 'Mi≈Ñsk Mazowiecki', 'M≈Çawa', 'Modlin', 'Mogilno', 'Mokra', 'Mo≈Ñki', 'MorƒÖg', 'Morzeszczyn', 'Mosina', 'Mrozy', 'Myszk√≥w', 'Nak≈Ço nad NoteciƒÖ', 'Na≈Çƒôcz√≥w', 'Nasielsk', 'Nekla', 'Nidzica', 'Nieszawa Waganiec', 'Nowa Ruda', 'Nowa S√≥l', 'Nowa Wie≈õ Mochy', 'Nowa Wie≈õ Wielka', 'Nowe Drezdenko', 'Nowiny Wielkie', 'Nowogard', 'Nowy SƒÖcz', 'Nowy Tomy≈õl', 'Oborniki ≈ölƒÖskie', 'Oborniki Wielkopolskie', 'Oborniki Wielkopolskie Miasto', 'Oborzyska Stare', 'Okonek', 'Olesno ≈ölƒÖskie', 'Ole≈õnica', 'Olsztyn G≈Ç√≥wny', 'Olsztyn Zachodni', 'O≈Çawa', 'Opalenica', 'Opoczno', 'Opole G≈Ç√≥wne', 'Opole Groszowice', 'Osie', 'Osielec', 'Osowiec', 'Ostrowie Biebrza≈Ñskie', 'Ostr√≥w Wielkopolski', 'Ostrzesz√≥w', 'O≈õwiƒôcim', 'Otwock', 'Ozimek', 'O≈ºar√≥w Mazowiecki', 'Pabianice', 'Palƒôdzie', 'PamiƒÖtkowo', 'Panki', 'Parlin', 'Pas≈Çƒôk', 'Pƒôpowo', 'Piaseczno', 'Piast√≥w', 'Pierzchno', 'Pierzyska', 'Pilawa', 'Pi≈Ça G≈Ç√≥wna', 'Piotrk√≥w Trybunalski', 'Pleszew', 'P≈Çochocin', 'P≈Çociczno ko≈Ço Suwa≈Çk', 'Pobiedziska', 'Pobiedziska Letnisko', 'Podborsko', 'Podlasek', 'Polanica Zdr√≥j', 'Pomniech√≥wek', 'Poraj', 'Poronin', 'Potƒôgowo', 'Pozna≈Ñ Dƒôbiec', 'Pozna≈Ñ Garbary', 'Pozna≈Ñ G≈Ç√≥wny', 'Pozna≈Ñ G≈Ç√≥wny (Nowy)', 'Pozna≈Ñ G≈Ç√≥wny (Stary)', 'Pozna≈Ñ Staro≈Çƒôka', 'Pozna≈Ñ Wola', 'Prabuty', 'Prudnik', 'Pruszcz Gda≈Ñski', 'Pruszk√≥w', 'Przemy≈õl G≈Ç√≥wny', 'Przetycz', 'Przeworsk', 'Przy≈Çubie', 'Przywory Opolskie', 'Pszcz√≥≈Çki', 'Pszczyna', 'Puck', 'Pu≈Çawy Miasto', 'Puszczyk√≥wko', 'Raba Wy≈ºna', 'Rabka Zdr√≥j', 'Racewo', 'Racibory', 'Racib√≥rz', 'Rac≈Çawice ≈ölƒÖskie', 'Radom', 'Radomsko', 'Radymno', 'Radziwi≈Ç≈Ç√≥w Mazowiecki', 'Rawicz', 'Rogo≈∫no Wielkopolskie', 'Rog√≥w', 'Rokietnica', 'Roztoki Bystrzyckie', 'Ruda ≈ölƒÖska', 'Ruda Wielka', 'Rumia', 'Runowo Pomorskie', 'Rusz√≥w', 'Rybnik', 'Rybnik Niedobczyce', 'Rybnik Paruszowiec', 'Rytel', 'Rzepin', 'Rzesz√≥w G≈Ç√≥wny', 'SƒÖtopy Samulewo', 'Serock', 'Sƒôdzis≈Çaw', 'Sƒôdzisz√≥w', 'Sƒôdzisz√≥w Ma≈Çopolski', 'Sidra', 'Siechnice', 'Siedlce', 'Siemiatycze', 'Sieradz', 'Sierakowice', 'Sierak√≥w ≈ölƒÖski', 'Silno', 'Skar≈ºysko Kamienna', 'Skierniewice', 'Skokowa', 'Skorzewo', 'S≈Çawiƒôcice', 'S≈Çawno', 'S≈Çonice', 'S≈Çupca', 'S≈Çupsk', 'Smardz√≥w Wroc≈Çawski', 'Smƒôtowo', 'Smolec', 'Sochaczew', 'Sopot', 'Sosnowiec G≈Ç√≥wny', 'So≈õnie Ostrowskie', 'Stalowa Wola', 'Staniszcze Ma≈Çe', 'Stara ≈Åubianka', 'Starcz√≥w', 'Stare Bojanowo', 'Stare Kurowo', 'Stare Pole', 'Stargard', 'Starogard Gda≈Ñski', 'Sterkowiec', 'Stƒôszew', 'Stronie', 'Stryk√≥w', 'Strysz√≥w', 'Strza≈Çkowo', 'Strzelce Kraje≈Ñskie Wsch.', 'Strzelce Opolskie', 'Strzelin', 'Sucha Beskidzka', 'Suchedni√≥w', 'Sulech√≥w', 'Sulej√≥wek Mi≈Çosna', 'Su≈Çkowice', 'Sumina Wie≈õ', 'Susz', 'Suwa≈Çki', 'Swarzƒôdz', 'Szamotu≈Çy', 'Szczecin DƒÖbie', 'Szczecin G≈Ç√≥wny', 'Szczecinek', 'Szczepki', 'Szczytna', 'Szczytno', 'Szepietowo', 'Szklarska Porƒôba G√≥rna', 'Szlachta', 'Sztum', 'Szyd≈Ç√≥w', 'Szymisz√≥w', '≈öcinawa', '≈öcinawka ≈örednia', '≈ölesin', '≈öroda Wielkopolska', '≈öwidwin', '≈öwiebodzice', '≈öwiebodzin', '≈öwiekatowo', '≈öwiƒôta Katarzyna', '≈öwinouj≈õcie', 'Taczan√≥w', 'Tarnowskie G√≥ry', 'Tarn√≥w', 'Tczew', 'Terespol', 'T≈Çuszcz', 'Tomasz√≥w Mazowiecki', 'Toru≈Ñ Miasto', 'Toru≈Ñ Wschodni', 'Trakiszki', 'Trzcianka', 'Trzebiat√≥w', 'Trzebinia', 'Trzemeszno', 'Turzno', 'Twarda G√≥ra', 'Tychowo', 'Tychy', 'Wa≈Çbrzych G≈Ç√≥wny', 'Wa≈Çbrzych Miasto', 'Warka', 'Warszawa Centralna', 'Warszawa Choszcz√≥wka', 'Warszawa Dawidy', 'Warszawa Falenica', 'Warszawa Gda≈Ñska', 'Warszawa G≈Ç√≥wna', 'Warszawa Goc≈Çawek', 'Warszawa Go≈ÇƒÖbki', 'Warszawa Jeziorki', 'Warszawa Ko≈Ço Nowy', 'Warszawa Lotnisko Chopina', 'Warszawa Miedzeszyn', 'Warszawa Miƒôdzylesie', 'Warszawa M≈Çyn√≥w', 'Warszawa Mokry ≈Åug', 'Warszawa Ochota', 'Warszawa Okƒôcie', 'Warszawa Olszynka Grochowska', 'Warszawa P≈Çudy', 'Warszawa PowƒÖzki', 'Warszawa Powi≈õle', 'Warszawa Praga', 'Warszawa Rado≈õƒá', 'Warszawa Rak√≥w Wkd', 'Warszawa Rakowiec', 'Warszawa Reduta Ordona', 'Warszawa Rembert√≥w', 'Warszawa Salomea Wkd', 'Warszawa S≈Çu≈ºewiec', 'Warszawa ≈ör√≥dmie≈õcie', 'Warszawa ≈ör√≥dmie≈õcie WKD', 'Warszawa Stadion', 'Warszawa Targ√≥wek', 'Warszawa Toru≈Ñska', 'Warszawa Ursus', 'Warszawa Ursus Nied≈∫wiadek', 'Warszawa Ursus P√≥≈Çnocny', 'Warszawa Wawer', 'Warszawa Weso≈Ça', 'Warszawa Wile≈Ñska', 'Warszawa W≈Çochy', 'Warszawa Wola', 'Warszawa Wola Grzybowska', 'Warszawa Wschodnia', 'Warszawa Zachodnia', 'Warszawa Zachodnia P9', 'Warszawa Zacisze Wilno', 'Warszawa ≈ªera≈Ñ', 'Warszawa Aleje Jerozolimskie', 'Warszawa Anin', 'Warszawa Zoo', 'Warszawa ≈ªwirki i Wigury', 'Wasilk√≥w', 'WƒÖbrze≈∫no', 'Wejherowo', 'Wejherowo Nanice', 'Wieliczka Park', 'Wierzchowo Cz≈Çuchowskie', 'Wierzchucin', 'Wilkoszewice', 'Witaszyce', 'Witnica', 'W≈Çadys≈Çawowo', 'W≈Çoc≈Çawek', 'W≈Çoc≈Çawek Zazamcze', 'W≈Çoszakowice', 'W≈Çoszczowa', 'Wolin', 'Wo≈Çczyn', 'Wroc≈Çaw Broch√≥w', 'Wroc≈Çaw G≈Ç√≥wny', 'Wroc≈Çaw Ku≈∫niki', 'Wroc≈Çaw Le≈õnica', 'Wroc≈Çaw Miko≈Çaj√≥w Wp2', 'Wroc≈Çaw Osobowice', 'Wroc≈Çaw Pracze', 'Wroc≈Çaw Psie Pole', 'Wroc≈Çaw Zachodni', 'Wronki', 'Wrze≈õnia', 'Wschowa', 'Wydminy', 'Wyrzysk-Osiek', 'Zabrze', 'Zalesie G√≥rne', 'Zawadzkie', 'Zawiercie', 'ZƒÖbki', 'ZƒÖbkowice ≈ölƒÖskie', 'ZbƒÖszynek', 'ZbƒÖszynek', 'ZbƒÖszy≈Ñ', 'Zblewo', 'Zdrody Nowe', 'Zdzieszowice', 'Zebrzydowice', 'Zgierz', 'Zgierz P√≥≈Çnoc', 'Zgierz Kontrewers', 'Zgierz Jaracza', 'Zgorzelec', 'Zielona G√≥ra G≈Ç√≥wna', 'Zielonczyn', 'Ziƒôbice', 'Z≈Çocieniec', 'Z≈Çotniki Kujawskie', 'Z≈Çot√≥w', '≈ªaga≈Ñ', '≈ªar√≥w', '≈ªary', '≈ªmigr√≥d', '≈ªukowo Wschodnie', '≈ªyczyn', '≈ªyrard√≥w', '≈ªytkowice', '≈ªywiec'])

time.sleep(5)

FirstStationPrompt = prompt('Stacja PoczƒÖtkowa ü¢í ', completer=stations_list)
LastStationPrompt = prompt('Stacja Ko≈Ñcowa ü¢í ', completer=stations_list)

print("\n")
print("Wyszukiwanie Po≈ÇƒÖczenia... ‚Üª")
print("\n")

stacja_poczatkowa_ext = ("A=1@O="+FirstStationPrompt)
stacja_docelowa_ext = ("A=1@O="+LastStationPrompt)

dane = {'fromStation': {FirstStationPrompt}, 'poczatkowa': {stacja_poczatkowa_ext}, 'toStation': {LastStationPrompt}, 'docelowa': {stacja_docelowa_ext}, 'data': {czas_payload}, 'date': {aktualna_data}, 'time': {current_time}, 'przyjazd': 'false', 'minChangeTime': '10', 'bilkomAvailOnly': 'on'}
headers = {'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8', 'Accept-Encoding': 'gzip, deflate, br', 'Accept-Language': 'en-US,en;q=0.5', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:100.0) Gecko/20100101 Firefox/100.0'}

index_search = "https://bilkom.pl/podroz?basketKey=&carrierKeys=P2,P1,P5,P9,P7,O1,PZ"
RequestedBilkomLink = requests.get(index_search, params=dane, headers=headers)
SeleniumDriver.get(RequestedBilkomLink.url)
SeleniumDriver.execute_script("changePage(nextPageLink, 1)")
time.sleep(8)
BilkomSourceCode = SeleniumDriver.page_source
SeleniumDriver.quit()

BilkomStrona = BeautifulSoup(BilkomSourceCode, "html.parser")

WylistowaneTripy = BilkomStrona.find_all("li", {"class": "el"})

print("Znalezione Po≈ÇƒÖczenia ‚Üì")
time.sleep(1)
print("\n")

for item in WylistowaneTripy:
	TrasaPociagu_FS = item.find("li", {"class": "first-r"})
	TrasaPociagu_PierwszaStacja = TrasaPociagu_FS.find("span", {"class": "main-station"}).text
	TrasaPociagu_LS = item.find("li", {"class": "last-r"})
	TrasaPociagu_OstatniaStacja = TrasaPociagu_LS.find("span", {"class": "main-station"}).text
	Peron_PierwszaStacja = TrasaPociagu_FS.find("span", {"class": "main-station"})
	Peron_OstatniaStacja = TrasaPociagu_LS.find("span", {"class": "main-station"})
	NumerPociagu = item.find("div", {"class": "carriers-wrapper"}).text
	CzasOdjazdu = item.find("li", {"class": "first-r"}).find("span", {"class": "arrival-time"}).text
	CzasPrzyjazdu = item.find("li", {"class": "last-r"}).find("span", {"class": "arrival-time"}).text
	OpozniniaPociagu = "0"
	FindCenaPrzejazdu = item.find("span", {"class": "price-wrapper"})
	PrzesiadkiPociagu = item.find("div", {"class": "changes"}).text
	CzasPodrozy = item.find("span", {"class": "duration"}).text
	ListowaniePrzewoznikow = item.find_all("div", {"class": "carrier"})

	PStrip = PrzesiadkiPociagu.replace("Przesiadki:", "")
	PStrip2 = PStrip.replace(" ", "")
	PStrip3 = PStrip2.strip()

	if Peron_PierwszaStacja.has_attr('data-peron'):
		PeronPierwszy = Peron_PierwszaStacja['data-peron']
	else:
		PeronPierwszy = "N/A"

	if Peron_OstatniaStacja.has_attr('data-peron'):
		PeronOstatni = Peron_OstatniaStacja['data-peron']
	else:
		PeronOstatni = "N/A"

	print(f"Trasa PociƒÖgu: {TrasaPociagu_PierwszaStacja.strip()} [{PeronPierwszy}] ‚Üí {TrasaPociagu_OstatniaStacja.strip()} [{PeronOstatni}]\n")

	ListaNumPoc = ""
	for przewoznik in ListowaniePrzewoznikow:
		NumPoc = przewoznik.find("div", {"class": "hidden"}).text
		ListaNumPoc+=(str(NumPoc)+"\n")
		
	print(f"‚ÆÆ Przewoznik/cy\n")
	print(f"{ListaNumPoc}") 
	print(f"Godzina Odjazdu ü¢í {CzasOdjazdu}")
	print(f"Godzina Przyjazdu ü¢í {CzasPrzyjazdu}")
	print(f"Ilo≈õƒá Przesiadek ü¢í {PStrip3}")
	print(f"Czas Podr√≥≈ºy ü¢í {CzasPodrozy}\n")

	if FindCenaPrzejazdu:
		CenaPrzejazdu = item.find("span", {"class": "price-wrapper"}).find("span", {"class": "price"}).text
		CenaPrzejazduOut = print(f"Cena Przejazdu ü¢í\033[1;32;40m {CenaPrzejazdu} \033[0;37;40mZ≈Å\n")
	else:
		CenaPrzejazduOut = print(f"Cena Przejazdu ü¢í\033[1;31;40m Niedostƒôpna\033[0;37;40m\n")

	print("‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n")

print(f"Link do podanych po≈ÇƒÖcze≈Ñ ‚ÆØ")
print(RequestedBilkomLink.url)